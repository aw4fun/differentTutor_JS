// Сущности не должны зависеть от интерфейсов, которые они не используют.

//ISP предлагает два подхода к решению этой проблемы с помощью разделения интерфейсов:
// через делегирование и через множественное наследование.


// делегирование => Adapter Pattern

//Разделение через множественное наследование
// предполагает, что IntervalSoundEmitter будет наследоваться одновременно
// от TimeInterval и от SoundEmitter. Это позволит отвязать родительские классы друг
// от друга и использовать в классе IntervalSoundEmitter только нужную функциональность.


